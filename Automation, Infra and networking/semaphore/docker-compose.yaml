services:
  mysql:
    image: docker.io/library/mysql:8.4
    hostname: mysql
    container_name: semaphore-mysql
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    restart: always
    networks:
      - semaphore

  semaphore:
    container_name: semaphore
    user: "1000:1000"
    image: docker.io/semaphoreui/semaphore:v2.14.10
    ports:
      - 443:3000
    environment:
      - SEMAPHORE_WEB_ROOT=${SEMAPHORE_WEB_ROOT}
      - SEMAPHORE_DB_USER=${MYSQL_USER}
      - SEMAPHORE_DB_PASS=${MYSQL_PASSWORD}
      - SEMAPHORE_DB_HOST=mysql
      - SEMAPHORE_DB_PORT=3306
      - SEMAPHORE_DB_DIALECT=mysql
      - SEMAPHORE_DB=${MYSQL_DATABASE}
      - SEMAPHORE_PLAYBOOK_PATH=/tmp/semaphore/
      - SEMAPHORE_ADMIN_PASSWORD=${SEMAPHORE_ADMIN_PASSWORD}
      - SEMAPHORE_ADMIN_NAME=admin
      - SEMAPHORE_ADMIN_EMAIL=
      - SEMAPHORE_ADMIN=${SEMAPHORE_ADMIN}
      - SEMAPHORE_ACCESS_KEY_ENCRYPTION=${SEMAPHORE_ACCESS_KEY_ENCRYPTION}
      - ANSIBLE_HOST_KEY_CHECKING=no
      - TZ=Europe/Oslo
      - SEMAPHORE_TLS_ENABLED=True
      - SEMAPHORE_TLS_CERT_FILE=/certs/fullchain.pem
      - SEMAPHORE_TLS_KEY_FILE=/certs/privkey.pem
    volumes:
      # If you want to use your own inventory and authorized keys, uncomment these lines
      # - ./inventory/:/inventory:ro
      # - ./authorized-keys/:/authorized-keys:ro
      # IF using SSO
      # - ./config:/etc/semaphore:rw
      - ./certs:/certs:ro
    restart: always
    depends_on:
      - mysql
    networks:
      - semaphore

networks:
  semaphore: